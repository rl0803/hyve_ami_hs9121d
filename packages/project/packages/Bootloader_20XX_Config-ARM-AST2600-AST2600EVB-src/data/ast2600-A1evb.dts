/dts-v1/;

#include "ast2600-u-boot.dtsi"

/ {
        model = "AST2600 EVB";
        compatible = "aspeed,ast2600-evb", "aspeed,ast2600";

	memory {
		device_type = "memory";
		reg = <0x80000000 0x40000000>;
	};

	chosen {
		stdout-path = &uart5;
	};

	aliases {
		spi0 = &fmc;
		spi1 = &spi1;
		spi2 = &spi2;
		ethernet0 = &mac2; // MAC3, dedicated-NIC
		ethernet1 = &mac3; // MAC4, shared-NIC
		// ethernet0 = &mac0;
		// ethernet1 = &mac1;
		// ethernet2 = &mac2;
		// ethernet3 = &mac3;
	};

	cpus {
		cpu@0 {
			clock-frequency = <800000000>;
		};
		cpu@1 {
			clock-frequency = <800000000>;
		};
	};
};

&uart5 {
	u-boot,dm-pre-reloc;
	status = "okay";
};

&sdrammc {
	clock-frequency = <400000000>;
};

&wdt1 {
	status = "okay";
};

&wdt2 {
	status = "okay";
};

&wdt3 {
	status = "okay";
};

&mdio {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_mdio1_default &pinctrl_mdio3_default &pinctrl_mdio4_default>;

	// pinctrl-0 = <	&pinctrl_mdio1_default &pinctrl_mdio2_default
	// 		&pinctrl_mdio3_default &pinctrl_mdio4_default>;

	#address-cells = <1>;
	#size-cells = <0>;

	ethphy0: ethernet-phy@0 {
		reg = <0>;
	};

	// ethphy1: ethernet-phy@1 {
	// 	reg = <0>;
	// };

	ethphy2: ethernet-phy@2 {
		reg = <0>;
	};

	ethphy3: ethernet-phy@3 {
		reg = <0>;
	};
};

&mac0 {
	status = "okay";
	phy-mode = "rgmii-rxid";
	phy-handle = <&ethphy0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_rgmii1_default>;
};

// &mac1 {
// 	status = "okay";
// 	phy-mode = "rgmii-rxid";
// 	phy-handle = <&ethphy1>;
// 	pinctrl-names = "default";
// 	pinctrl-0 = <&pinctrl_rgmii2_default>;
// };

&mac2 {
	status = "okay";
	phy-mode = "rgmii";
	phy-handle = <&ethphy2>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_rgmii3_default &pinctrl_mac3link_default>;	
};

&mac3 {
	status = "okay";
	phy-mode = "rmii";
	phy-handle = <&ethphy3>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_rmii4_default>;
};

// &mac2 {
// 	status = "okay";
// 	phy-mode = "rgmii";
// 	phy-handle = <&ethphy2>;
// 	pinctrl-names = "default";
// 	pinctrl-0 = <&pinctrl_rgmii3_default &pinctrl_mac3link_default>;	
// };

// &mac3 {
// 	status = "okay";
// 	phy-mode = "rgmii";
// 	phy-handle = <&ethphy3>;
// 	pinctrl-names = "default";
// 	pinctrl-0 = <&pinctrl_rgmii4_default &pinctrl_mac4link_default>;	
// };

&fmc {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fmcquad_default>;

	flash@0 {
		compatible = "spi-flash", "sst,w25q256";
		status = "okay";
		spi-max-frequency = <50000000>;
		spi-tx-bus-width = <4>;
		spi-rx-bus-width = <4>;
	};

	flash@1 {
                compatible = "spi-flash", "sst,w25q256";
                status = "okay";
                spi-max-frequency = <50000000>;
                spi-tx-bus-width = <4>;
                spi-rx-bus-width = <4>;
        };
};
&spi1 {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_spi1_default &pinctrl_spi1abr_default
			&pinctrl_spi1cs1_default &pinctrl_spi1wp_default
			&pinctrl_spi1wp_default &pinctrl_spi1quad_default>;

	flash@0 {
		compatible = "spi-flash", "sst,w25q256";
		status = "okay";
		spi-max-frequency = <50000000>;
		spi-tx-bus-width = <4>;
		spi-rx-bus-width = <4>;
	};

};

&spi2 {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_spi2_default &pinctrl_spi2cs1_default
			&pinctrl_spi2cs2_default &pinctrl_spi2quad_default>;

	flash@0 {
		compatible = "spi-flash", "sst,w25q256";
		status = "okay";
		spi-max-frequency = <50000000>;
		spi-tx-bus-width = <4>;
		spi-rx-bus-width = <4>;
	};

};
&emmc {
	u-boot,dm-pre-reloc;
    timing-phase = <0x700ff>;
};

&emmc_slot0 {
	u-boot,dm-pre-reloc;
    status = "disabled";	//not support boot from emmc
    bus-width = <4>;
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_emmc_default>;
    sdhci-drive-type = <1>;
};

&sdhci {
    timing-phase = <0xc6ffff>;
};

&sdhci_slot0 {
    status = "okay";
    bus-width = <4>;
    pwr-gpios = <&gpio0 ASPEED_GPIO(V, 0) GPIO_ACTIVE_HIGH>;
    pwr-sw-gpios = <&gpio0 ASPEED_GPIO(V, 1) GPIO_ACTIVE_HIGH>;
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_sd1_default>;
    sdhci-drive-type = <1>;
};

&sdhci_slot1 {
    status = "okay";
    bus-width = <4>;
    pwr-gpios = <&gpio0 ASPEED_GPIO(V, 2) GPIO_ACTIVE_HIGH>;
    pwr-sw-gpios = <&gpio0 ASPEED_GPIO(V, 3) GPIO_ACTIVE_HIGH>;
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_sd2_default>;
    sdhci-drive-type = <1>;
};

&i2c0 {
        status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1_default>;	
};

&i2c3 {
        status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4_default>;
};

&i2c7 {
        status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c8_default>;
};

&i2c8 {
        status = "okay";
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_i2c9_default>;
};

&display_port {
       status = "okay";
};

&scu {
	mac0-clk-delay = <0x10 0x0a
			  0x10 0x10
			  0x10 0x10>;
	// mac1-clk-delay = <0x10 0x0a
	// 		  0x10 0x10
	// 		  0x10 0x10>;
	mac2-clk-delay = <0x08 0x04
			  0x08 0x04
			  0x08 0x04>;
	mac3-clk-delay = <0x08 0x04
			  0x08 0x04
			  0x08 0x04>;
};

/* Init GPIO outout pin to default value in uboot stage.
   To avoid polarity confusing, use default polarity - Active High. */
&gpio0 {
	// FM_BACKUP_BIOS_SEL_N	
	pin_gpio_e0 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(E, 0) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// FM_BIOS_BMC_CTRL
	pin_gpio_e1 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(E, 1) GPIO_ACTIVE_HIGH>;
		output-low;
	};
	// FM_SRST_REQ2_N
	pin_gpio_f2 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(F, 2) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// FM_BMC_RESET_DET_N
	pin_gpio_f3 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(F, 3) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// BMC_CPLD_JTAG_MUX_SEL
	pin_gpio_f6 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(F, 6) GPIO_ACTIVE_HIGH>;
		output-low;
	};
	// FM_PWRBRK_BMC_N
	pin_gpio_f7 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(F, 7) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// BMC_OCP1_SMRST_L
	pin_gpio_g0 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(G, 0) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// FM_DP_CONN_PWR_EN_CTL
	pin_gpio_g1 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(G, 1) GPIO_ACTIVE_HIGH>;
		output-low;
	};
	// FP_ID_LED_N
	pin_gpio_g2 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(G, 2) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// FP_ID_BTN_N
	pin_gpio_i5 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(I, 5) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// P0_NMI_SYNC_FLOOD_L
	pin_gpio_j4 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(J, 4) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// EMMC_RST_N
	pin_gpio_j6 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(J, 6) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// P5V_AUX_RST_DLY
	pin_gpio_l4 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(L, 4) GPIO_ACTIVE_HIGH>;
		output-low;
	};
	// P3V3_AUX_RST_DLY
	pin_gpio_l5 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(L, 5) GPIO_ACTIVE_HIGH>;
		output-low;
	};
	// FM_BMC_ONCTL_N
	pin_gpio_m0 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(M, 0) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// BMC_PLD_VR_ALERT_L
	pin_gpio_n2 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(N, 2) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// FM_CEC_BIOS_RESET_IN
	pin_gpio_n6 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(N, 6) GPIO_ACTIVE_HIGH>;
		output-low;
	};
	// FM_AUTH_COMPLETE_N
	pin_gpio_o6 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(O, 6) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// FM_BMC_PWRBTN_OUT_N
	pin_gpio_p1 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(P, 1) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// RST_SYSRST_BTN_OUT_N
	pin_gpio_p3 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(P, 3) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// BMC_HW_HEARTBEAT_N
	pin_gpio_p7 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(P, 7) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// RST_RGMII_PHYRST_N
	pin_gpio_s0 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(S, 0) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// FM_BMC_PLD_RESERVED
	pin_gpio_s1 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(S, 1) GPIO_ACTIVE_HIGH>;
		output-low;
	};
	// RST_RTCRST_N
	pin_gpio_s2 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(S, 2) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// P0_HDT_SEL_0
	pin_gpio_s3 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(S, 3) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// SPD_REMOTE_SEL
	pin_gpio_v2 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(V, 2) GPIO_ACTIVE_HIGH>;
		output-low;
	};	
	// A_P3V_BAT_SCALED_EN
	pin_gpio_v4 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(V, 4) GPIO_ACTIVE_HIGH>;
		output-low;
	};
	// BMC_HDT_DBREQ_L
	pin_gpio_v5 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(V, 5) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// IRQ_SMB_ROT_ALRT_N
	pin_gpio_v6 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(V, 6) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// BMC_SYS_STATUS_LED_CTRL_Y
	pin_gpio_x1 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(X, 1) GPIO_ACTIVE_HIGH>;
		output-low;
	};
	// BMC_SYS_STATUS_LED_CTRL_G
	pin_gpio_x2 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(X, 2) GPIO_ACTIVE_HIGH>;
		output-low;
	};
	// FM_SRST_REQ1_N
	pin_gpio_y0 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(Y, 0) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// FM_ROT_WDRST2_N
	// Note: If enable the WDT2 in uboot, this func-pin will be WDT ext signal.
	//       Must remove this GPIO init setting
	pin_gpio_y1 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(Y, 1) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// FM_BMC_EMMC_RST_N
	pin_gpio_y3 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(Y, 3) GPIO_ACTIVE_HIGH>;
		output-high;
	};
	// BMC_SYS_STATUS_LED_CTRL_R
	pin_gpio_z1 {
		gpio-hog;
		gpios =  <ASPEED_GPIO(Z, 1) GPIO_ACTIVE_HIGH>;
		output-low;
	};
};

