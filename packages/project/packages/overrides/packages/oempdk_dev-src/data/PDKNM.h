/****************************************************************
 ****************************************************************
 **                                                            **
 **    (C)Copyright 2005-2006, American Megatrends Inc.        **
 **                                                            **
 **            All Rights Reserved.                            **
 **                                                            **
 **        6145-F, Northbelt Parkway, Norcross,                **
 **                                                            **
 **        Georgia - 30071, USA. Phone-(770)-246-8600.         **
 **                                                            **
 ****************************************************************
 ****************************************************************/
/******************************************************************
 *
 * PDKInt.c
 * PDK interrupt handling.
 *
 *  Author: Vinothkumar S <vinothkumars@ami.com>
 ******************************************************************/

#ifndef __PDKINT__H
#define  __PDKINT__H

#include "Types.h"
#include "OSPort.h"
#include "Debug.h"
#include "API.h"
#include "SharedMem.h"
#include "IPMI_SensorEvent.h"
#include "Pnm.h"

#define NM_PECI_PROXY_NETFNLUN						((INT8U)(0x2e << 2) | BMC_LUN_00)
//#define NM_SENSOR_NETFNLUN						((INT8U)(0x04 << 2) | BMC_LUN_00)
#define NM_RSPMSG_NETFNLUN_MASK						0xf8
#define NM_OFFSET_NETFN							0x02
#define NM_OFFSET_CMD							0x06
#define NM_OFFSET_DATA_START						0x07
#define NM_OFFSET_DATA_START_SENSOR_READING				0x08
#define NM_COMPLETE_CODE_LEN						0x01
#define NM_INTEL_MANUFACTURER_ID_LEN					0x03	// 0x000157, length=3
#define CMD_NM_OEM_PECI_PROXY_GET_CPU_AND_MEMORY_TEMPERATURE		0x4b

// enum type for NetFn=0x2e, Cmd=0x4b
enum {
    CPU_0_INDEX     =0,
    CPU_1_INDEX     =1,
    CPU_2_INDEX     =2,
    CPU_3_INDEX     =3,
    END_OF_CPU_LIST =4
};

// enum type for NetFn=0x2e, Cmd=0x4b
enum {
    CPU_MEMORY_CH_0_DIMM0 =0,
    CPU_MEMORY_CH_0_DIMM1 =1,
    CPU_MEMORY_CH_0_DIMM2 =2,
    CPU_MEMORY_CH_0_DIMM3 =3,
    CPU_MEMORY_CH_1_DIMM0 =4,
    CPU_MEMORY_CH_1_DIMM1 =5,
    CPU_MEMORY_CH_1_DIMM2 =6,
    CPU_MEMORY_CH_1_DIMM3 =7,
    CPU_MEMORY_CH_2_DIMM0 =8,
    CPU_MEMORY_CH_2_DIMM1 =9,
    CPU_MEMORY_CH_2_DIMM2 =10,
    CPU_MEMORY_CH_2_DIMM3 =11,
    CPU_MEMORY_CH_3_DIMM0 =12,
    CPU_MEMORY_CH_3_DIMM1 =13,
    CPU_MEMORY_CH_3_DIMM2 =14,
    CPU_MEMORY_CH_3_DIMM3 =15,
    END_OF_CPU_MEMORY_LIST=16
};

//enum for Sensor Type
enum {

    CPU_0_TEMPERATURE  =0,
    CPU_1_TEMPERATURE  =1,
    CPU_2_TEMPERATURE  =2,
    CPU_3_TEMPERATURE  =3,
    CPU_0_CH_0_DIMM0   =END_OF_CPU_LIST + CPU_MEMORY_CH_0_DIMM0,
    CPU_0_CH_0_DIMM1   =END_OF_CPU_LIST + CPU_MEMORY_CH_0_DIMM1,
    CPU_0_CH_0_DIMM2   =END_OF_CPU_LIST + CPU_MEMORY_CH_0_DIMM2,
    CPU_0_CH_0_DIMM3   =END_OF_CPU_LIST + CPU_MEMORY_CH_0_DIMM3,
    CPU_0_CH_1_DIMM0   =END_OF_CPU_LIST + CPU_MEMORY_CH_1_DIMM0,
    CPU_0_CH_1_DIMM1   =END_OF_CPU_LIST + CPU_MEMORY_CH_1_DIMM1,
    CPU_0_CH_1_DIMM2   =END_OF_CPU_LIST + CPU_MEMORY_CH_1_DIMM2,
    CPU_0_CH_1_DIMM3   =END_OF_CPU_LIST + CPU_MEMORY_CH_1_DIMM3,
    CPU_0_CH_2_DIMM0   =END_OF_CPU_LIST + CPU_MEMORY_CH_2_DIMM0,
    CPU_0_CH_2_DIMM1   =END_OF_CPU_LIST + CPU_MEMORY_CH_2_DIMM1,
    CPU_0_CH_2_DIMM2   =END_OF_CPU_LIST + CPU_MEMORY_CH_2_DIMM2,
    CPU_0_CH_2_DIMM3   =END_OF_CPU_LIST + CPU_MEMORY_CH_3_DIMM0,
    CPU_0_CH_3_DIMM0   =END_OF_CPU_LIST + CPU_MEMORY_CH_3_DIMM0,
    CPU_0_CH_3_DIMM1   =END_OF_CPU_LIST + CPU_MEMORY_CH_3_DIMM1,
    CPU_0_CH_3_DIMM2   =END_OF_CPU_LIST + CPU_MEMORY_CH_3_DIMM2,
    CPU_0_CH_3_DIMM3   =END_OF_CPU_LIST + CPU_MEMORY_CH_3_DIMM3,

    CPU_1_CH_0_DIMM0   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM0,
    CPU_1_CH_0_DIMM1   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM1,
    CPU_1_CH_0_DIMM2   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM2,
    CPU_1_CH_0_DIMM3   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM3,
    CPU_1_CH_1_DIMM0   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM0,
    CPU_1_CH_1_DIMM1   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM1,
    CPU_1_CH_1_DIMM2   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM2,
    CPU_1_CH_1_DIMM3   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM3,
    CPU_1_CH_2_DIMM0   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_2_DIMM0,
    CPU_1_CH_2_DIMM1   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_2_DIMM1,
    CPU_1_CH_2_DIMM2   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_2_DIMM2,
    CPU_1_CH_2_DIMM3   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM0,
    CPU_1_CH_3_DIMM0   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM0,
    CPU_1_CH_3_DIMM1   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM1,
    CPU_1_CH_3_DIMM2   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM2,
    CPU_1_CH_3_DIMM3   =END_OF_CPU_LIST + 1*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM3,

    CPU_2_CH_0_DIMM0   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM0,
    CPU_2_CH_0_DIMM1   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM1,
    CPU_2_CH_0_DIMM2   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM2,
    CPU_2_CH_0_DIMM3   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM3,
    CPU_2_CH_1_DIMM0   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM0,
    CPU_2_CH_1_DIMM1   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM1,
    CPU_2_CH_1_DIMM2   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM2,
    CPU_2_CH_1_DIMM3   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM3,
    CPU_2_CH_2_DIMM0   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_2_DIMM0,
    CPU_2_CH_2_DIMM1   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_2_DIMM1,
    CPU_2_CH_2_DIMM2   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_2_DIMM2,
    CPU_2_CH_2_DIMM3   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM0,
    CPU_2_CH_3_DIMM0   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM0,
    CPU_2_CH_3_DIMM1   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM1,
    CPU_2_CH_3_DIMM2   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM2,
    CPU_2_CH_3_DIMM3   =END_OF_CPU_LIST + 2*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM3,

    CPU_3_CH_0_DIMM0   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM0,
    CPU_3_CH_0_DIMM1   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM1,
    CPU_3_CH_0_DIMM2   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM2,
    CPU_3_CH_0_DIMM3   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_0_DIMM3,
    CPU_3_CH_1_DIMM0   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM0,
    CPU_3_CH_1_DIMM1   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM1,
    CPU_3_CH_1_DIMM2   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM2,
    CPU_3_CH_1_DIMM3   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_1_DIMM3,
    CPU_3_CH_2_DIMM0   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_2_DIMM0,
    CPU_3_CH_2_DIMM1   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_2_DIMM1,
    CPU_3_CH_2_DIMM2   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_2_DIMM2,
    CPU_3_CH_2_DIMM3   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM0,
    CPU_3_CH_3_DIMM0   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM0,
    CPU_3_CH_3_DIMM1   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM1,
    CPU_3_CH_3_DIMM2   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM2,
    CPU_3_CH_3_DIMM3   =END_OF_CPU_LIST + 3*END_OF_CPU_MEMORY_LIST + CPU_MEMORY_CH_3_DIMM3,
    END_OF_SENSOR_TYPE_LIST
};

#endif //__PDKINT__H
